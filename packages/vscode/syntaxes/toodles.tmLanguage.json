{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Toodles",
  "scopeName": "text.toodles",
  "patterns": [
    {
      "include": "#block"
    }
  ],
  "repository": {
    "block": {
      "patterns": [
        {
          "include": "#important"
        },
        {
          "include": "#synopsis"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#done"
        },
        {
          "include": "#priority"
        },
        {
          "include": "#date"
        },
        {
          "include": "#todo"
        },
        {
          "include": "#inline"
        },
        {
          "include": "text.html.markdown#inline"
        }
      ]
    },
    "important": {
      "name": "markup.other.toodles.important",
      "begin": "(?<=(?:^|\\G)\\s*)!\\s",
      "end": "$",
      "patterns": [
        {
          "include": "#inline"
        },
        {
          "include": "text.html.markdown#inline"
        }
      ]
    },
    "synopsis": {
      "name": "markup.inserted.toodles",
      "begin": "(?<=(?:^|\\G)\\s*)~\\s",
      "end": "$",
      "patterns": [
        {
          "include": "#inline"
        },
        {
          "include": "text.html.markdown#inline"
        }
      ]
    },
    "comment": {
      "name": "comment.line.toodles",
      "begin": "(?<=(?:^|\\G)\\s*)/\\s",
      "end": "$"
    },
    "done": {
      "name": "comment.line.toodles.done",
      "begin": "(?<=(?:^|\\G)\\s*)x\\s",
      "end": "$",
      "patterns": [
        {
          "include": "#inline"
        }
      ]
    },
    "inline": {
      "patterns": [
        {
          "include": "#priority"
        },
        {
          "include": "#date"
        },
        {
          "include": "#due"
        },
        {
          "include": "#price"
        },
        {
          "include": "#context"
        },
        {
          "include": "#project"
        },
        {
          "include": "#hashtag"
        },
        {
          "include": "#tag"
        },
        {
          "include": "#multiplier"
        }
      ]
    },
    "priority": {
      "name": "keyword.control.toodles.priority",
      "match": "(?<=^\\s*(?:[!Xx~-]\\s)?)(?:(\\(A\\))|(\\(B\\))|(\\(C\\))|\\([D-Z]\\))\\B",
      "captures": {
        "1": {
          "name": "keyword.control.toodles.priority.high"
        },
        "2": {
          "name": "keyword.control.toodles.priority.med"
        },
        "3": {
          "name": "keyword.control.toodles.priority.low"
        }
      }
    },
    "date": {
      "patterns": [
        {
          "include": "#completed"
        },
        {
          "include": "#open"
        }
      ]
    },
    "completed": {
      "name": "string.interpolated.toodles.date",
      "match": "(?<=^\\s*(?:[Xx]\\s)(?:\\([A-Z]\\) )?)(\\d{4}-\\d{2}-\\d{2}) (\\d{4}-\\d{2}-\\d{2})(?: (\\d{4}-\\d{2}-\\d{2}))?\\b",
      "captures": {
        "1": {
          "name": "string.interpolated.toodles.date.completed"
        },
        "2": {
          "name": "string.interpolated.toodles.date.created"
        },
        "3": {
          "name": "string.interpolated.toodles.date.due"
        }
      }
    },
    "open": {
      "name": "string.interpolated.toodles.date",
      "match": "(?<=^\\s*(?:[!~-]\\s)?(?:\\([A-Z]\\) )?)(\\d{4}-\\d{2}-\\d{2})(?: (\\d{4}-\\d{2}-\\d{2}))?\\b",
      "captures": {
        "1": {
          "name": "string.interpolated.toodles.date.created"
        },
        "2": {
          "name": "string.interpolated.toodles.date.due"
        }
      }
    },
    "price": {
      "name": "markup.inserted.toodles.price",
      "match": "(?<=^\\s*(?:[!Xx~-]\\s)?(?:\\([A-Z]\\) )?(?:\\d{4}-\\d{2}-\\d{2} ){0,3})((?:[$£€]\\d*[.,]?\\d{1,2}-)?[$£€]\\d*[.,]?\\d{1,2})(?= )"
    },
    "context": {
      "name": "entity.name.class.toodles.context",
      "match": "\\B(\\@\\w+)"
    },
    "project": {
      "name": "constant.language.toodles.project",
      "match": "\\B(\\+\\w+)"
    },
    "hashtag": {
      "name": "markup.deleted.toodles.hashtag",
      "match": "\\B(\\#\\w+)"
    },
    "tag": {
      "name": "variable.parameter.toodles.tag",
      "match": "(?<!<|\\]\\()\\b(\\w+(?<!https?):\\S+)"
    },
    "multiplier": {
      "name": "keyword.other.unit.toodles.multiplier",
      "match": "\\b(x\\d+)$"
    }
  }
}
